security:
    encoders:
        App\Entity\User:
            algorithm: auto
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # On décrit où se trouve la classe de nos utilisateurs
        in_database:
            entity:
                class: App\Entity\User
                # On indique la propriété qui permet d'identifier les utilisateurs, en l'occurence l'email
                property: email
        jwt:
            lexik_jwt:
                class: App\Entity\User
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        refresh:
            pattern: ^/api/token/refresh
            stateless: true
            anonymous: true
        login:
            pattern: ^/api/login$
            stateless: true
            anonymous: true
            provider: in_database
            json_login:
                check_path: /api/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            provider: jwt
            pattern: ^/api
            stateless: true
            anonymous: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
#        main:
#            anonymous: true
#            lazy: true
#            provider: in_database
#            json_login:
#                check_path: api_login
#                success_handler


            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/api/token/refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }
